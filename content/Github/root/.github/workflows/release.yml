name: Release

on:
  release:
    types: [released, prereleased]

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    steps:
      - name: Fetch Sources
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          filter: tree:0

      - name: Setup .NET Env
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.203"

      - name: Restore Solution
        run: |
          dotnet restore
          dotnet tool restore

      - name: Pack Solution
        run: |
          dotnet pack --configuration Release

      - name: Build Debug
        run: |
          dotnet build --configuration Debug

      - name: Upload Thunderstore Artifact
        uses: actions/upload-artifact@v4
        with:
          name: thunderstore-build
          path: {ProjectName}/dist/*.zip
#if (NuGetPackaging)

      - name: Upload NuPkg Artifact
        uses: actions/upload-artifact@v4
        with:
          name: nupkg-build
          path: {ProjectName}/bin/Release/*.nupkg
#endif
#if (UploadDebugBuild)

      - name: Rename Debug Build
        run: |
          mv "{ProjectName}/bin/Debug/{Framework}/{AssemblyName}.dll" "{ProjectName}/bin/Debug/{Framework}/{AssemblyName}-Debug.dll"

      - name: Upload Debug Dll
        uses: actions/upload-artifact@v4
        with:
          name: debug-build
          path: {ProjectName}/bin/Debug/{Framework}/{AssemblyName}-Debug.dll
#endif

  upload-release-artifacts:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download all Artifacts
        uses: actions/download-artifact@v4

      - name: Upload artifacts to Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#if (NuGetPackaging && UploadDebugBuild)
        run: gh release upload ${{ github.event.release.tag_name }} thunderstore-build/*.zip nupkg-build/*.nupkg debug-build/*.dll
#elseif (UploadDebugBuild)
        run: gh release upload ${{ github.event.release.tag_name }} thunderstore-build/*.zip debug-build/*.dll
#elseif (NuGetPackaging)
        run: gh release upload ${{ github.event.release.tag_name }} thunderstore-build/*.zip nupkg-build/*.nupkg
#else
        run: gh release upload ${{ github.event.release.tag_name }} thunderstore-build/*.zip
#endif
#if (NuGetPackaging)

  deploy-nuget:
    name: Deploy to NuGet
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Fetch Sources
        uses: actions/checkout@v4

      - name: Download nupkg artifact
        uses: actions/download-artifact@v4
        with:
          name: nupkg-build
          path: {ProjectName}/bin/Release

      - name: Setup .NET environment
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "8.0.203"

      - name: Publish to NuGet.org
        run: |
          dotnet nuget push {ProjectName}/bin/Release/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json
#endif

  deploy-thunderstore:
    if: ${{ github.event.release.prerelease == false }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download Thunderstore Artifact
        uses: actions/download-artifact@v4
        with:
          name: thunderstore-build
          path: {ProjectName}/dist

      - name: Restore Tools
        run: |
          dotnet tool restore

      - name: Publishing to Thunderstore
        env:
          TCLI_AUTH_TOKEN: ${{ secrets.THUNDERSTORE_API_TOKEN }}
        run: |
          dotnet tcli publish --config-path {ProjectName}/ts-assets/thunderstore.toml --file {ProjectName}/dist/*.zip
