{
    "$schema": "http://json.schemastore.org/template",
    "author": "Xilophor",
    "classifications": [ "Content Warning", "Mod", "BepInEx", "GitHub" ],
    "identity": "Xilophor.ContentWarning.GitHub",
    "name": "Content Warning GitHub Workflows Template",
    "shortName": [ "cwgithub" ],
    "sourceName": "{ModName}",
    "tags": {
        "language": "yaml",
        "type": "item"
    },
    "symbols": {
        "Author": {
            "type": "parameter",
            "description": "The author name the mod will be uploaded under. For example, \"xilophor\" would be valid. Note: You need the API key from the Author/Namespace to be able to upload.",
            "isRequired": true,
            "replaces": "{Author}"
        },
        "Description": {
            "type": "parameter",
            "description": "The description of the mod. This will appear below the mod name.",
            "replaces": "{Description}",
            "defaultValue": "A mod for Content Warning."
        },
        "WebsiteUrl": {
            "type": "parameter",
            "description": "A website to link to, visible on the mod listing. Most commonly used to link to the GitHub repo.",
            "replaces": "{WebsiteUrl}",
            "defaultValue": ""
        },
        "Nsfw": {
            "type": "parameter",
            "description": "Whether the mod is NSFW or not.",
            "datatype": "bool",
            "defaultValue": false
        },
        "DependOnHookGen": {
            "type": "parameter",
            "description": "Whether your mod requires AutoHookGenPatcher. This is usually the case when you are using MonoMod.",
            "datatype": "bool",
            "defaultValue": false
        },
        "UseChangelog": {
            "type": "parameter",
            "description": "Whether you want to use a CHANGELOG file.",
            "datatype": "bool",
            "defaultValue": false
        },
        "CreateChangelog": {
            "type": "parameter",
            "description": "Create a CHANGELOG file to use. Dependent on UseChangelog",
            "datatype": "bool",
            "defaultValue": false
        },
        "NuGetPackaging" : {
            "type": "parameter",
            "description": "Whether you are packaging your mod to be uploaded to NuGet. Should only be used for APIs/libs.",
            "datatype": "bool",
            "defaultValue": false
        },
        "UploadDebugBuild" : {
            "type": "parameter",
            "description": "Whether a Debug build should be uploaded to the GitHub release. Only useful if you have any \"#if (DEBUG)\" preprocessing directives.",
            "datatype": "bool",
            "defaultValue": false
        },
        "License": {
            "type": "parameter",
            "description": "What LICENSE you use. This will be automatically added to the solution directory and used for NuGet packaging.",
            "datatype": "choice",
            "enableQuotelessLiterals": true,
            "choices": [
                { "choice": "None", "displayName": "None" },
                { "choice": "MIT", "displayName": "MIT License" },
                { "choice": "GPL-3.0-only", "displayName": "GNU General Public License v3" },
                { "choice": "LGPL-3.0-only", "displayName": "GNU Lesser General Public License v3" },
                { "choice": "AGPL-3.0-only", "displayName": "GNU Affero General Public License v3" },
                { "choice": "MPL-2.0", "displayName": "Mozilla Public License v2.0" },
                { "choice": "Apache-2.0", "displayName": "Apache License, Version 2.0" },
                { "choice": "CC-BY-NC-4.0", "displayName": "Creative Commons Non-Commercial Attribution Licenses, Version 4.0" },
                { "choice": "CC-BY-NC-SA-4.0", "displayName": "Creative Commons Non-Commercial Share-Alike Attribution Licenses, Version 4.0" }
            ],
            "replaces": "{LicenseExp}",
            "defaultValue": "None"
        },
        "NoLicense": {
            "type": "computed",
            "value": "(License == None)"
        },
        "MITLicense": {
            "type": "computed",
            "value": "(License == MIT)"
        },
        "GPLLicense": {
            "type": "computed",
            "value": "(License == GPL-3.0-only)"
        },
        "LGPLLicense": {
            "type": "computed",
            "value": "(License == LGPL-3.0-only)"
        },
        "AGPLLicense": {
            "type": "computed",
            "value": "(License == AGPL-3.0-only)"
        },
        "MPLLicense": {
            "type": "computed",
            "value": "(License == MPL-2.0)"
        },
        "ApacheLicense": {
            "type": "computed",
            "value": "(License == Apache-2.0)"
        },
        "CC-BY-NCLicense": {
            "type": "computed",
            "value": "(License == CC-BY-NC-4.0)"
        },
        "CC-BY-NC-SALicense": {
            "type": "computed",
            "value": "(License == CC-BY-NC-SA-4.0)"
        },
        "OpenSource": {
            "type": "computed",
            "value": "(MITLicense || GPLLicense || LGPLLicense || AGPLLicense || MPLLicense || ApacheLicense)"
        },
        "ProjectName": {
            "type": "bind",
            "binding": "msbuild:Product",
            "replaces": "{ProjectName}",
            "defaultValue": "ExampleMod",
            "fileRename": "{ProjectName}"
        },
        "Framework": {
            "type": "bind",
            "binding": "msbuild:TargetFramework",
            "replaces": "{Framework}",
            "defaultValue": "netstandard2.1"
        },
        "AssemblyName": {
            "type": "bind",
            "binding": "msbuild:AssemblyName",
            "replaces": "{AssemblyName}",
            "defaultValue": "ExampleMod"
        }
    },
    "sources": [
        {
            "exclude": [
                "**/[Bb]in/**",
                "**/[Oo]bj/**",
                ".template.config/**/*",
                "**/root/**",
                "licenses/**",
                "**/*.filelist",
                "**/*.lock.json"
            ],
            "modifiers": [
                {
                    "condition": "NuGetPackaging == false",
                    "exclude": [
                        "**/icon_128x128.png"
                    ]
                }
            ]
        },
        {
            "source": "./root/",
            "target": "../",
            "modifiers": [
                {
                    "condition": "CreateChangelog == false || UseChangelog == false",
                    "exclude": [
                        "**/CHANGELOG.md"
                    ]
                }
            ]
        },
        {
            "source": "./licenses/",
            "target": "../",
            "exclude": "**/*",
            "modifiers": [
                { "condition": "MITLicense", "include": [ "**/MIT.*" ] },
                { "condition": "GPLLicense", "include": [ "**/GPL.*" ] },
                { "condition": "LGPLLicense", "include": [ "**/LGPL.*" ] },
                { "condition": "AGPLLicense", "include": [ "**/AGPL.*" ] },
                { "condition": "MPLLicense", "include": [ "**/MPL.*" ] },
                { "condition": "ApacheLicense", "include": [ "**/Apache.*" ] },
                { "condition": "CC-BY-NCLicense", "include": [ "**/CC-BY-NC.*" ] },
                { "condition": "CC-BY-NC-SALicense", "include": [ "**/CC-BY-NC-SA.*" ] }
            ],
            "rename": {
                "MIT.LICENSE": "LICENSE",
                "GPL.LICENSE": "LICENSE",
                "LGPL.LICENSE": "LICENSE",
                "AGPL.LICENSE": "LICENSE",
                "MPL.LICENSE": "LICENSE",
                "Apache.LICENSE": "LICENSE",
                "CC-BY-NC.LICENSE.txt": "LICENSE.txt",
                "CC-BY-NC-SA.LICENSE.txt": "LICENSE.txt"
            }
        }
    ],
    "specialCustomOperations": {
        "**.toml": {
            "operations": [
                {
                    "type": "conditional",
                    "configuration": {
                        "if": [ "#if" ],
                        "else": [ "#else" ],
                        "elseif": [ "#elseif" ],
                        "endif": [ "#endif" ],
                        "actionableIf": [ "##if" ],
                        "actionableElse": [ "##else" ],
                        "actionableElseif": [ "##elseif" ],
                        "trim": true,
                        "wholeLine": true,
                        "evaluator": "C++"
                    }
                }
            ]
        }
    }
}
